name: Windows Server 2019 TunShell

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: true
  #push:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: windows-2019
    steps:
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3
      #  if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      - name: Enable Shell Access
        #if: ${{ always() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        run: |
          set -x
          RELAY=relay.tunshell.com
          KEYS=$(curl -sSf -X POST https://relay.tunshell.com/api/sessions); echo $KEYS | jq -r '.peer1_key' > peer1; echo $KEYS | jq -r '.peer2_key' > peer2;
          (while true; do
            echo "Connect to github actions node using: sh <(curl -sSf https://lets.tunshell.com/init.sh) L $(cat peer2) 0000000000000000000000 $RELAY"
            echo "Or: https://tunshell.com/term#$(cat peer2),0000000000000000000000,$RELAY"
            sleep 1
          done) &
          powershell '[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; &$([scriptblock]::Create((New-Object System.Net.WebClient).DownloadString("https://lets.tunshell.com/init.ps1"))) '"T $(cat peer1) 0000000000000000000000 $RELAY"

        shell: bash
